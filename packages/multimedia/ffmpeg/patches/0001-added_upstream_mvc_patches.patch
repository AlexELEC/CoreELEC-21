From 8d785c331dab7f4340352bc0ade57c511db7fab4 Mon Sep 17 00:00:00 2001
From: tanio99 <tanio99@wolke7.net>
Date: Sat, 9 Jan 2021 10:28:48 +0100
Subject: [PATCH 1/4] avcodec: add h264_mvc codec id and profiles (original
 patch from h.leppkes@gmail.com)

---
 libavcodec/avcodec.h    | 1 +
 libavcodec/codec_desc.c | 7 +++++++
 libavcodec/codec_id.h   | 2 ++
 libavcodec/profiles.c   | 1 +
 libavformat/mpegts.c    | 2 +-
 5 files changed, 12 insertions(+), 1 deletion(-)

diff --git a/libavcodec/avcodec.h b/libavcodec/avcodec.h
index 39881a1..a7503cd 100644
--- a/libavcodec/avcodec.h
+++ b/libavcodec/avcodec.h
@@ -1616,6 +1616,7 @@ typedef struct AVCodecContext {
 #define FF_PROFILE_H264_HIGH_444_PREDICTIVE  244
 #define FF_PROFILE_H264_HIGH_444_INTRA       (244|FF_PROFILE_H264_INTRA)
 #define FF_PROFILE_H264_CAVLC_444            44
+#define FF_PROFILE_H264_MULTIVIEW_HIGH_DEPTH 138
 
 #define FF_PROFILE_VC1_SIMPLE   0
 #define FF_PROFILE_VC1_MAIN     1
diff --git a/libavcodec/codec_desc.c b/libavcodec/codec_desc.c
index 199f62d..6b28379 100644
--- a/libavcodec/codec_desc.c
+++ b/libavcodec/codec_desc.c
@@ -1923,6 +1923,13 @@ static const AVCodecDescriptor codec_descriptors[] = {
         .long_name = NULL_IF_CONFIG_SMALL("ViewQuest VQC"),
         .props     = AV_CODEC_PROP_LOSSY,
     },
+    {
+        .id        = AV_CODEC_ID_H264_MVC,
+        .type      = AVMEDIA_TYPE_VIDEO,
+        .name      = "h264_mvc",
+        .long_name = NULL_IF_CONFIG_SMALL("H264 MVC"),
+        .props     = AV_CODEC_PROP_LOSSY,
+    },
 
     /* various PCM "codecs" */
     {
diff --git a/libavcodec/codec_id.h b/libavcodec/codec_id.h
index 89a4a0c..5aaa35f 100644
--- a/libavcodec/codec_id.h
+++ b/libavcodec/codec_id.h
@@ -321,6 +321,8 @@ enum AVCodecID {
     AV_CODEC_ID_MEDIA100,
     AV_CODEC_ID_VQC,
 
+    AV_CODEC_ID_H264_MVC,
+
     /* various PCM "codecs" */
     AV_CODEC_ID_FIRST_AUDIO = 0x10000,     ///< A dummy id pointing at the start of audio codecs
     AV_CODEC_ID_PCM_S16LE = 0x10000,
diff --git a/libavcodec/profiles.c b/libavcodec/profiles.c
index 7af7fbe..3173b48 100644
--- a/libavcodec/profiles.c
+++ b/libavcodec/profiles.c
@@ -71,6 +71,7 @@ const AVProfile ff_h264_profiles[] = {
     { FF_PROFILE_H264_CAVLC_444,            "CAVLC 4:4:4"           },
     { FF_PROFILE_H264_MULTIVIEW_HIGH,       "Multiview High"        },
     { FF_PROFILE_H264_STEREO_HIGH,          "Stereo High"           },
+    { FF_PROFILE_H264_MULTIVIEW_HIGH_DEPTH, "Multiview High Depth"  },
     { FF_PROFILE_UNKNOWN },
 };
 
diff --git a/libavformat/mpegts.c b/libavformat/mpegts.c
index d97702f..7f378f4 100644
--- a/libavformat/mpegts.c
+++ b/libavformat/mpegts.c
@@ -808,7 +808,7 @@ static const StreamType ISO_types[] = {
 #endif
     { 0x1b, AVMEDIA_TYPE_VIDEO, AV_CODEC_ID_H264       },
     { 0x1c, AVMEDIA_TYPE_AUDIO, AV_CODEC_ID_AAC        },
-    { 0x20, AVMEDIA_TYPE_VIDEO, AV_CODEC_ID_H264       },
+    { 0x20, AVMEDIA_TYPE_VIDEO, AV_CODEC_ID_H264_MVC   },
     { 0x21, AVMEDIA_TYPE_VIDEO, AV_CODEC_ID_JPEG2000   },
     { 0x24, AVMEDIA_TYPE_VIDEO, AV_CODEC_ID_HEVC       },
     { 0x42, AVMEDIA_TYPE_VIDEO, AV_CODEC_ID_CAVS       },
-- 
2.34.1


From c203306b775f944c1eb796536275c843c69bd6e3 Mon Sep 17 00:00:00 2001
From: tanio99 <tanio99@wolke7.net>
Date: Sat, 9 Jan 2021 10:48:08 +0100
Subject: [PATCH 2/4] h264_parser: add support for parsing h264 mvc NALUs
 (original patch from h.leppkes@gmail.com)

---
 libavcodec/h264_parser.c          | 33 ++++++++++++++++++++++++++++---
 libavcodec/parsers.c              |  1 +
 libavcodec/remove_extradata_bsf.c |  3 ++-
 3 files changed, 33 insertions(+), 4 deletions(-)

diff --git a/libavcodec/h264_parser.c b/libavcodec/h264_parser.c
index 46134a1..58538a0 100644
--- a/libavcodec/h264_parser.c
+++ b/libavcodec/h264_parser.c
@@ -64,6 +64,7 @@ typedef struct H264ParseContext {
     int parse_last_mb;
     int64_t reference_dts;
     int last_frame_num, last_picture_structure;
+    int is_mvc;
 } H264ParseContext;
 
 static int find_start_code(const uint8_t *buf, int buf_size,
@@ -121,14 +122,19 @@ static int h264_find_frame_end(H264ParseContext *p, const uint8_t *buf,
         } else if (state <= 5) {
             int nalu_type = buf[i] & 0x1F;
             if (nalu_type == H264_NAL_SEI || nalu_type == H264_NAL_SPS ||
-                nalu_type == H264_NAL_PPS || nalu_type == H264_NAL_AUD) {
+                nalu_type == H264_NAL_PPS || nalu_type == H264_NAL_AUD ||
+                nalu_type == H264_NAL_SUB_SPS) {
                 if (pc->frame_start_found) {
                     i++;
                     goto found;
                 }
             } else if (nalu_type == H264_NAL_SLICE || nalu_type == H264_NAL_DPA ||
-                       nalu_type == H264_NAL_IDR_SLICE) {
+                       nalu_type == H264_NAL_IDR_SLICE || (p->is_mvc && nalu_type == H264_NAL_EXTEN_SLICE)) {
                 state += 8;
+
+                if (nalu_type == H264_NAL_EXTEN_SLICE) {
+                    i += 3; // skip mvc extension
+                }
                 continue;
             }
             state = 7;
@@ -622,7 +628,9 @@ static int h264_parse(AVCodecParserContext *s,
         }
     }
 
-    parse_nal_units(s, avctx, buf, buf_size);
+    if (!p->is_mvc) {
+        parse_nal_units(s, avctx, buf, buf_size);
+    }
 
     if (avctx->framerate.num)
         time_base = av_inv_q(av_mul_q(avctx->framerate, (AVRational){avctx->ticks_per_frame, 1}));
@@ -693,3 +701,22 @@ const AVCodecParser ff_h264_parser = {
     .parser_parse   = h264_parse,
     .parser_close   = h264_close,
 };
+
+static av_cold int init_mvc(AVCodecParserContext *s)
+{
+    H264ParseContext *p = s->priv_data;
+    int ret = init(s);
+    if (ret < 0)
+        return ret;
+
+    p->is_mvc = 1;
+    return 0;
+}
+
+const AVCodecParser ff_h264_mvc_parser = {
+    .codec_ids      = { AV_CODEC_ID_H264_MVC },
+    .priv_data_size = sizeof(H264ParseContext),
+    .parser_init    = init_mvc,
+    .parser_parse   = h264_parse,
+    .parser_close   = h264_close,
+};
diff --git a/libavcodec/parsers.c b/libavcodec/parsers.c
index d355808..4ca5450 100644
--- a/libavcodec/parsers.c
+++ b/libavcodec/parsers.c
@@ -50,6 +50,7 @@ extern const AVCodecParser ff_gsm_parser;
 extern const AVCodecParser ff_h261_parser;
 extern const AVCodecParser ff_h263_parser;
 extern const AVCodecParser ff_h264_parser;
+extern const AVCodecParser ff_h264_mvc_parser;
 extern const AVCodecParser ff_hevc_parser;
 extern const AVCodecParser ff_hdr_parser;
 extern const AVCodecParser ff_ipu_parser;
diff --git a/libavcodec/remove_extradata_bsf.c b/libavcodec/remove_extradata_bsf.c
index 66b7d00..b8151f1 100644
--- a/libavcodec/remove_extradata_bsf.c
+++ b/libavcodec/remove_extradata_bsf.c
@@ -76,7 +76,7 @@ static int h264_split(const uint8_t *buf, int buf_size)
         if ((state & 0xFFFFFF00) != 0x100)
             break;
         nalu_type = state & 0x1F;
-        if (nalu_type == H264_NAL_SPS) {
+        if (nalu_type == H264_NAL_SPS || nalu_type == H264_NAL_SUB_SPS) {
             has_sps = 1;
         } else if (nalu_type == H264_NAL_PPS)
             has_pps = 1;
@@ -204,6 +204,7 @@ static int remove_extradata(AVBSFContext *ctx, AVPacket *pkt)
             i = mpeg4video_split(pkt->data, pkt->size);
             break;
         case AV_CODEC_ID_H264:
+        case AV_CODEC_ID_H264_MVC:
             i = h264_split(pkt->data, pkt->size);
             break;
         case AV_CODEC_ID_HEVC:
-- 
2.34.1


From fcbd18712e8eea357c5e9ea4cf76b07f2256db82 Mon Sep 17 00:00:00 2001
From: tanio99 <tanio99@wolke7.net>
Date: Sat, 9 Jan 2021 10:53:04 +0100
Subject: [PATCH 3/4] h264_parser: force grabbing a new timestamp until a frame
 start was found (original patch from h.leppkes@gmail.com)

---
 libavcodec/h264_parser.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/libavcodec/h264_parser.c b/libavcodec/h264_parser.c
index 58538a0..f3637fa 100644
--- a/libavcodec/h264_parser.c
+++ b/libavcodec/h264_parser.c
@@ -616,6 +616,10 @@ static int h264_parse(AVCodecParserContext *s,
     } else {
         next = h264_find_frame_end(p, buf, buf_size, avctx);
 
+        if (next == END_NOT_FOUND && pc->frame_start_found == 0) {
+            s->fetch_timestamp = 1;
+        }
+
         if (ff_combine_frame(pc, next, &buf, &buf_size) < 0) {
             *poutbuf      = NULL;
             *poutbuf_size = 0;
-- 
2.34.1


From 1c5406e9ca40beaf359a819930ad3d39e1974e0a Mon Sep 17 00:00:00 2001
From: tanio99 <tanio99@wolke7.net>
Date: Sat, 9 Jan 2021 11:00:47 +0100
Subject: [PATCH 4/4] fixup (original patch from popcornmix@gmail.com)

---
 libavcodec/extract_extradata_bsf.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/libavcodec/extract_extradata_bsf.c b/libavcodec/extract_extradata_bsf.c
index 329b1a6..32a0b5f 100644
--- a/libavcodec/extract_extradata_bsf.c
+++ b/libavcodec/extract_extradata_bsf.c
@@ -139,6 +139,7 @@ static int extract_extradata_h2645(AVBSFContext *ctx, AVPacket *pkt,
     };
     static const int extradata_nal_types_h264[] = {
         H264_NAL_SPS, H264_NAL_PPS,
+        H264_NAL_SPS, H264_NAL_SUB_SPS, H264_NAL_PPS,
     };
 
     ExtractExtradataContext *s = ctx->priv_data;
@@ -169,7 +170,7 @@ static int extract_extradata_h2645(AVBSFContext *ctx, AVPacket *pkt,
                 if (nal->type == HEVC_NAL_SPS) has_sps = 1;
                 if (nal->type == HEVC_NAL_VPS) has_vps = 1;
             } else {
-                if (nal->type == H264_NAL_SPS) has_sps = 1;
+                if (nal->type == H264_NAL_SPS || nal->type == H264_NAL_SUB_SPS) has_sps = 1;
             }
         } else if (s->remove) {
             filtered_size += nal->raw_size + 3;
@@ -178,7 +179,7 @@ static int extract_extradata_h2645(AVBSFContext *ctx, AVPacket *pkt,
 
     if (extradata_size &&
         ((ctx->par_in->codec_id == AV_CODEC_ID_HEVC && has_sps && has_vps) ||
-         (ctx->par_in->codec_id == AV_CODEC_ID_H264 && has_sps))) {
+         ((ctx->par_in->codec_id == AV_CODEC_ID_H264 || ctx->par_in->codec_id == AV_CODEC_ID_H264_MVC) && has_sps))) {
         AVBufferRef *filtered_buf = NULL;
         PutByteContext pb_filtered_data, pb_extradata;
         uint8_t *extradata;
@@ -330,6 +331,7 @@ static const struct {
     { AV_CODEC_ID_AVS3,       extract_extradata_mpeg4   },
     { AV_CODEC_ID_CAVS,       extract_extradata_mpeg4   },
     { AV_CODEC_ID_H264,       extract_extradata_h2645   },
+    { AV_CODEC_ID_H264_MVC,   extract_extradata_h2645   },
     { AV_CODEC_ID_HEVC,       extract_extradata_h2645   },
     { AV_CODEC_ID_MPEG1VIDEO, extract_extradata_mpeg12  },
     { AV_CODEC_ID_MPEG2VIDEO, extract_extradata_mpeg12  },
@@ -399,6 +401,7 @@ static const enum AVCodecID codec_ids[] = {
     AV_CODEC_ID_AVS3,
     AV_CODEC_ID_CAVS,
     AV_CODEC_ID_H264,
+    AV_CODEC_ID_H264_MVC,
     AV_CODEC_ID_HEVC,
     AV_CODEC_ID_MPEG1VIDEO,
     AV_CODEC_ID_MPEG2VIDEO,
-- 
2.34.1

